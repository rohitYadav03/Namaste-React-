React First Class - Short Notes üìù
1Ô∏è‚É£ React CDN ‚Äì Used React via CDN without installing npm.

Included React and ReactDOM using <script> tags.
2Ô∏è‚É£ React.createElement() ‚Äì Creates elements instead of writing HTML.


const heading = React.createElement("h1", {}, "Hello World from React");
1st argument: Tag name ("h1")
2nd argument: Attributes ({})
3rd argument: Content ("Hello World from React")

3Ô∏è‚É£ Rendering in React ‚Äì Uses root.render() to show elements on the page.


const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(heading);
Converts React object into an actual HTML element and displays it.

4Ô∏è‚É£ Nested Elements in React

Multiple elements inside React.createElement() use an array [].

const parent = React.createElement("div", { id: "parent" }, [
    React.createElement("div", { id: "child" }, [
        React.createElement("h1", {}, "I am h1 tag"),
        React.createElement("h2", {}, "I am h2 tag")
    ])
]);
root.render(parent);
Creates a nested structure dynamically.

5Ô∏è‚É£ React Element ‚Üí Object ‚Üí HTML

React elements are JavaScript objects, converted into HTML by ReactDOM.
6Ô∏è‚É£ Next Class: JSX

JSX makes writing React easier (e.g., <h1>Hello JSX</h1> instead of React.createElement()).
Key Takeaways ‚úÖ
‚úî React uses React.createElement() instead of plain HTML.
‚úî ReactDOM renders React elements into the browser.
‚úî Nested elements are passed as an array.
‚úî React elements are objects before being converted to HTML.

------------Episode2 Notes-------------------------------------------------------------------
‚Äì package.json => Defines project metadata, dependencies, and scripts.
 contains all the important information about your project, including:
‚úîÔ∏è Project Name (name)
‚úîÔ∏è Version (version)
‚úîÔ∏è Description (description)
‚úîÔ∏è Dependencies (dependencies) ‚Üí Required packages
‚úîÔ∏è Dev Dependencies (devDependencies) ‚Üí Packages needed only for development
‚úîÔ∏è Scripts (scripts) ‚Üí Commands like npm start
‚úîÔ∏è Main File (main) ‚Üí Entry point of the project

It helps npm manage dependencies and makes your project easy to share and install


‚Äì package-lock.json locks the exact versions of all installed dependencies to ensure consistency.
‚Äì node_modules/ is a folder that stores all the installed dependencies for your project.
‚Äì dependencies =>  Required for running the project.
‚Äì devDependencies => Required only for development (not production).